\NewEntry 0 The data struture
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p><span style="color:#ff0000">kmotion</span> has a fairly simple data structure consisting of ...<br /></p>
</body></html>

\NewEntry 1 /var/lib/motion/
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The main motion directory</p>
</body></html>

\NewEntry 2 feed.rc
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>An <span style="color:#ff0000">config</span> file generated by <span style="color:#ff0000">kmotion</span> for the <span style="color:#ff0000">kmotion</span> web viewer<br /><br />Line 1 holds the number of currently active cameras <span style="color:#ff0000">ie</span> 3 would be mean cameras 1, 2, 3 are active etc<br />Lines 2 - 17 hold the text strings describing the currently active cameras</p>
</body></html>

\NewEntry 2 lastsnap.jpg
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is a pointer to the last snapshot generated by motion. It is generated by motion &amp; not used by kmotion</p>
</body></html>

\NewEntry 2 events
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>A directory generated by <span style="color:#ff0000">kmotion</span> to signal when motion has detected motion! The directory is normally empty but<br />is populated with files of 0B when motion is detected.<br /><br />For example if motion is detected on feed 3, a file called '3' will appear, with length of 0B, when the motion has ceased<br />the file '3' will be deleted. This is controlled by motion.<span style="color:#ff0000">config</span> using the on_event_start &amp; on_event_end options<br /></p>
</body></html>

\NewEntry 2 <YYYYMMDD>
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The dates of recorded snapshots &amp; events in <span style="color:#ff0000">YYYYMMDD</span> format</p>
</body></html>

\NewEntry 3 <FEED NUM>
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The feed numbers for the corresponding dates, always two digit <span style="color:#ff0000">ie</span> 01, 02, 03 ...<br /> </p>
</body></html>

\NewEntry 4 journal_snap
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>A journal of snapshot entries, coded in the following format #&lt;start time&gt;$&lt;repeat in seconds&gt;#... the<br />start time is the start of the sequence, the repeat in seconds is the repeat interval.<br /><br />There can be multiple entries ... for example the following is valid ... #165053$60#165943$10</p>
</body></html>

\NewEntry 4 last_jpeg
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>A file containing the path &amp; name of the last <span style="color:#ff0000">jpeg</span> for this date &amp; feed. This is controlled by motion.<span style="color:#ff0000">config</span> using the on_picture_save option. A valid example would be ... /var/lib/motion/20080126/01/<span style="color:#ff0000">tmp</span>/173943.<span style="color:#ff0000">jpg</span></p>
</body></html>

\NewEntry 4 tmp
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>A temporary directory used to store snapshots for this feed at 1 second intervals. These snapshots are then moved to the video directory by the kmotion_hkd2.py daemon dependent on the requested snapshot interval &amp; providing there is not already an event sub directory in the video directory. <br /><br />This mechanism is used to avoid snapshot &amp; events overlapping, Snapshots are not moved from the temporary directory to the video directory for several seconds, If an event occurs motion immediately writes directories directly into the video directory. If an event has been recorded a snapshot will not overwrite it. <br /><br />In addition it provides a guaranteed minimum 1 second update for the the <span style="color:#ff0000">kmotion</span> viewer.</p>
</body></html>

\NewEntry 4 video
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The video directory for the corresponding date and feed</p>
</body></html>

\NewEntry 5 <HHMMSS>.jpg
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>A snapshot <span style="color:#ff0000">jpeg</span> for HHMMSS</p>
</body></html>

\NewEntry 5 <HHMMSS>
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>A directory, which signifies an event at this time. This structure is used since events are usually recorded at higher frame rates than 1 per second. The directory contains multiple frames. </p>
</body></html>

\NewEntry 6 <FRAME>.jpg
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>Event <span style="color:#ff0000">jpegs</span> for the parent directory <span style="color:#ff0000">HHMMSS</span> named as 00.<span style="color:#ff0000">jpg</span>, 01.<span style="color:#ff0000">jpg</span> ...</p>
</body></html>

\NewEntry 0 'main' code

\NewEntry 1 index.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is the main view ... its fairly complex. <br /><br />Due to <span style="color:#ff0000">Javascript</span> not having a sleep() function window.<span style="color:#ff0000">setTimeout</span>() is used. This causes problems when trying to pass parameters resulting in a relatively high number of 'global' variables.  A closure construct is unworkable with window.<span style="color:#ff0000">setTimeout</span>() causing a recursion error.<br /><br />The code is commented but I have explained the function of the various objects as sub notes.<br /><br /></p>
</body></html>

\NewEntry 2 state.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The state object holds the state information for the web viewer, namely:<br /><br /><span style="color:#ff0000">iframe</span>_width ...		an integer holding the width of the <span style="color:#ff0000">iframe</span><br /><span style="color:#ff0000">iframe</span>_height ...	an integer holding the height of the <span style="color:#ff0000">iframe</span><br />view_format ...		an integer holding the view format <span style="color:#ff0000">ie</span>  1, 2, 3, 4 for 1, 4, 9 or 16 way views<br />video_feeds ...		an integer holding the number of video active feeds<br />feed_text ...		an array of video feed text strings<br /><br />view_<span style="color:#ff0000">seqs</span> ...		an array of arrays holding the conversions from views to feeds<br />			state.view_<span style="color:#ff0000">seqs</span>[1] = [0, 1];<br />			state.view_<span style="color:#ff0000">seqs</span>[2] = [0, 1, 2, 3, 4];<br />			state.view_<span style="color:#ff0000">seqs</span>[3] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];<br />			state.view_<span style="color:#ff0000">seqs</span>[4] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];<br /><br />enable_buttons ...	a <span style="color:#ff0000">bool</span>, true for enable  view format &amp; camera select button functions, false to disable<br />pref_mode ...		an integer holding the preference selection <br />			1=non interleaved, 2=interleaved, 3=full, 4=low bandwidth<br /><br />pref_interleave ...	a <span style="color:#ff0000">bool</span>, true for interleave mode, false for non interleave mode<br />pref_normal_pause ...	an integer holding the number of ms before another normal frame<br />pref_motion_pause ...	an integer holding the number of ms before another motion frame<br /><br /><br /><br /><br /><br /><br /></p>
</body></html>

\NewEntry 0 'frame' code

\NewEntry 1 standard_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is the standard view frame interleave &amp; non interleave ... its fairly complex<br /><br />Due to <span style="color:#ff0000">Javascript</span> not having a sleep() function window.<span style="color:#ff0000">setTimeout</span>() is used. This causes problems when trying to pass parameters resulting in a relatively high number of 'global' variables.  A closure construct is unworkable with window.<span style="color:#ff0000">setTimeout</span>() causing a recursion error.<br /><br />The code is commented but I have explained the function of the various objects as sub notes.</p>
</body></html>

\NewEntry 2 parent_cache.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The parent_cache object is as the name suggests a cache of the parent objects to increase execution speed. For an explanation see index.php.</p>
</body></html>

\NewEntry 2 stream.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The stream object is key, it holds the current stream as in streaming images information, namely:<br /><br />cache_jpeg ...		an array of cached images used as a browser workaround<br />cache_num ...		an integer holding a count into the cache_jpeg array<br />loaded ...		a bool, if true image has been loaded<br />view ...			an integer holding the current view number 1 to parent_cache.view_format squared<br />feed ...			an integer holding the current feed number 1 to parent_cache.video_feeds (camera feeds)<br /><br />view_changed ...	an integer holding the last manual view change number, used to avoid caching image issues<br />last_camera_button ...	an integer holding the value of the last camera button pressed<br /><br />server_reply1 ...	an array of latest jpeg filenames for feeds: index 1 - 16<br />server_reply2 ...	an array of active events as feed numbers: index 0 - length	<br /><br />server_snap2 ...	a snapshot of the interleave feed array, used to aid in clean interleaving<br />interleave_ptr ...	an integer pointer into server_snap2 pointing to the current interleave item<br />interleave_view ...	an integer pointer into parent_cache.view_seqs to the current non interleaved item<br />interleave_lock ...	a bool, if true then in interleave cycle mode, if false in straight refresh cycle mode<br />			this alternates multiple times through a full refresh<br />cache_try_count ...	an integer counter used to store the caching retrys, too many retrys &amp; move onto the next<br />			image</p>
</body></html>

\NewEntry 1 lowbw_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is the low bandwidth frame.<br /><br />Due to <span style="color:#ff0000">Javascript</span> not having a sleep() function window.<span style="color:#ff0000">setTimeout</span>() is used. This causes problems when trying to pass parameters resulting in a relatively high number of 'global' variables.  A closure construct is unworkable with window.<span style="color:#ff0000">setTimeout</span>() causing a recursion error.<br /><br />The code is commented but I have explained the function of the various objects as sub notes.</p>
</body></html>

\NewEntry 2 parent_cache.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The parent_cache object is as the name suggests a cache of the parent objects to increase execution speed. For an explanation see index.php.</p>
</body></html>

\NewEntry 2 stream.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The stream object is key, it holds the current stream as in streaming images information, namely:<br /><br />cache_jpeg ...		an array of cached images used as a browser workaround<br />cache_num ...		an integer holding a count into the cache_jpeg array<br />loaded ...		a bool, if true image has been loaded<br /><br />feed ...			an integer holding the current feed number 1 to parent_cache.video_feeds (camera feeds)<br />start_time ...		an integer holding the time in ms used to calculate view display times<br /><br />server_reply1 ...	an array of latest jpeg filenames for feeds: index 1 - 16<br />server_reply2 ...	an array of active events as feed numbers: index 0 - length	<br /><br />server_snap2 ...	a snapshot of the interleave feed array, used to aid in clean interleaving<br />interleave_ptr ...	an integer pointer into server_snap2 pointing to the current interleave item<br /><br />cache_try_count ...	an integer counter used to store the caching retrys, too many retrys &amp; move onto the next<br />			image</p>
</body></html>

\NewEntry 1 full_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is the full frame ie automatic full screen on feeds where motion has been detected.<br /><br />Due to <span style="color:#ff0000">Javascript</span> not having a sleep() function window.<span style="color:#ff0000">setTimeout</span>() is used. This causes problems when trying to pass parameters resulting in a relatively high number of 'global' variables.  A closure construct is unworkable with window.<span style="color:#ff0000">setTimeout</span>() causing a recursion error.<br /><br />The code is commented but I have explained the function of the various objects as sub notes.</p>
</body></html>

\NewEntry 2 parent_cache.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The parent_cache object is as the name suggests a cache of the parent objects to increase execution speed. For an explanation see index.php.</p>
</body></html>

\NewEntry 2 stream.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The stream object is key, it holds the current stream as in streaming images information, namely:<br /><br />cache_jpeg ...		an array of cached images used as a browser workaround<br />cache_num ...		an integer holding a count into the cache_jpeg array<br /><br />loaded ...		a bool, if true image has been loaded<br />view ...			an integer holding the current view number 1 to parent_cache.view_format squared<br />feed ...			an integer holding the current feed number 1 to parent_cache.video_feeds (camera feeds)<br /><br />view_changed ...	an integer holding the last manual view change number, used to avoid caching image issues<br />last_camera_button ...	an integer holding the value of the last camera button pressed<br /><br />server_reply1 ...	an array of latest jpeg filenames for feeds: index 1 - 16<br />server_reply2 ...	an array of active events as feed numbers: index 0 - length	<br /><br />interleave_view ...	an integer pointer into parent_cache.view_seqs to the current non interleaved item<br /><br />cache_try_count ...	an integer counter used to store the caching retrys, too many retrys &amp; move onto the next<br />	</p>
</body></html>

\NewEntry 2 full_full_frame.php

\NewEntry 3 parent_cache.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The parent_cache object is as the name suggests a cache of the parent objects to increase execution speed. For an explanation see index.php.</p>
</body></html>

\NewEntry 3 stream.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The stream object is key, it holds the current stream as in streaming images information, namely:<br /><br />cache_jpeg ...		an array of cached images used as a browser workaround<br />cache_num ...		an integer holding a count into the cache_jpeg array<br />loaded ...		a bool, if true image has been loaded<br /><br />feed ...			an integer holding the current feed number 1 to parent_cache.video_feeds (camera feeds)<br />start_time ...		an integer holding the time in ms used to calculate view display times<br /><br />server_returned ...	a bool, if true the server has returned motion information, if false we are still waiting for the server<br /><br />server_reply1 ...	an array of latest jpeg filenames for feeds: index 1 - 16<br />server_reply2 ...	an array of active events as feed numbers: index 0 - length	<br /><br />server_snap2 ...	a snapshot of the interleave feed array, used to aid in clean interleaving<br />interleave_ptr ...	an integer pointer into server_snap2 pointing to the current interleave item<br /><br />cache_try_count ...	an integer counter used to store the caching retrys, too many retrys &amp; move onto the next<br />			image</p>
</body></html>

\NewEntry 1 archive_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is the archive viewing frame ... its fairly complex. <br /><br />Due to <span style="color:#ff0000">Javascript</span> not having a sleep() function window.<span style="color:#ff0000">setTimeout</span>() is used. This causes problems when trying to pass parameters resulting in a relatively high number of 'global' variables.  A closure construct is unworkable with window.<span style="color:#ff0000">setTimeout</span>() causing a recursion error.<br /><br />The code is commented but I have explained the function of the various objects as sub notes.<br /></p>
<p></p>
</body></html>

\NewEntry 2 archive.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The archive object holds the basic information for the archive frame, namely:<br /><br />selected_date ...	a string holding the selected date from the <span style="color:#ff0000">dropdown</span> list<br />selected_feed ...	an integer holding the selected feed from the d<span style="color:#ff0000">ropdown</span> list<br />frame_skipping ...	a <span style="color:#ff0000">bool</span> indicating that frames are being skipped on playback</p>
</body></html>

\NewEntry 2 image.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The image object is key, it holds the current image information in one of two states, namely:<br /><br />is_event ...		a <span style="color:#ff0000">bool</span>, true = is an event, false = is a snapshot<br />loaded ...		a <span style="color:#ff0000">bool</span>, true if the current image has been successfully loaded ... this is a control flag<br />			set by display_frame() as a workaround for asynchronous  processes<br /><span style="color:#ff0000">jpeg</span>_secs ...		an integer holding the current image reference as seconds since 00:00<br /><span style="color:#ff0000">jpeg</span>_frame ...		an integer, holding the current image frame ... this is ONLY valid if is_event is true, in which<br />			case <span style="color:#ff0000">jpeg</span>_secs is the <span style="color:#ff0000">dir</span>, <span style="color:#ff0000">jpeg</span>_frame is the <span style="color:#ff0000">jpeg</span>. if is_event is false <span style="color:#ff0000">jpeg</span>_secs is the <span style="color:#ff0000">jpeg</span><br />max_frames ...		an integer holding the maximum number of frames per second that an event <span style="color:#ff0000">dir</span> can hold<br />			this is ONLY valid if is_event is true.</p>
</body></html>

\NewEntry 2 dbase.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The <span style="color:#ff0000">dbase</span> object is key, loaded via an AJAX call it contains the database of all events &amp; snapshots, namely:<br /><br />event_start ...		an array of integer pointers to event starts as seconds since 00:00<br />event_start_frames ...	an array of integers holding the number of frames at the corresponding event_start array<br />			location<br />			depending on when the event starts this may well be less than event_frames<br />event_finish ...		an array of integer pointers to event finishes as seconds since 00:00<br />event_finish_frames ... an array of integers holding the number of frames at the corresponding event_finish array<br />			location<br />			depending on when the event finishes this may well be less than event_frames<br />event_frames ...	a array of integers holding the max number of frames for the corresponding event starts &amp; <br />			finish array locations<br />snap ...			a array of integer pointers to snapshot starts as seconds since 00:00<br />snap_delay ...		a array of integers holding the delay in seconds before another snapshot for the corresponding<br />			snap array location <br />populated ...		a <span style="color:#ff0000">bool</span>, true if the database has been loaded ... this is a control flag set by <span style="color:#ff0000">dbase</span>_populate()<br />			as a workaround for asynchronous  processes</p>
</body></html>

\NewEntry 2 tline.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The <span style="color:#ff0000">tline</span> object holds the time line information, namely:<br /><br />events ...	a array of integers pointing to the time line, each one indicating an event<br />snap ...		a array of integers pointing to the time line, each one indicating an snapshot<br />marker ...	an integer pointing to the time line holding the current marker location<br /><br />The event &amp; snap arrays are filled when the time line is populated with <span style="color:#ff0000">tline</span>_populate(), they are used as a cache<br />by <span style="color:#ff0000">tline</span>_marker() so when the marker moves it knows what <span style="color:#ff0000">png</span> to back fill the old marker position with.<br /><br />This object is only accessed by time line functions.<br /></p>
</body></html>

\NewEntry 2 nexus.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The nexus object is key, nexus as in central, it holds the state of the playback code, namely:<br /><br />start_ms ...		an integer holding the time is ms before an image is loaded<br />image_try_count ...	an integer holding the number of times the current image has been tested to see if it has loaded<br />populate_try_count ...	an integer holding the number of times the database has been tested to see if it has been<br />			loaded<br />skip_frames ...		a <span style="color:#ff0000">bool</span>, true if skipping frames while FF or <span style="color:#ff0000">REWing</span> at high speed or via a slow link<br />play_mode ...		a <span style="color:#ff0000">bool</span>, true if in play mode, false if in pause mode<br />play_forward ...		a <span style="color:#ff0000">bool</span>, true if playing forward, false if playing backward, only valid id play_mode is true<br />play_accelerator ...	an integer pointing to accelerator_index<br />accelerator_index ...	an array holding the accelerator multipliers for faster playback <br /><br /><br /></p>
</body></html>

\NewEntry 2 stream.
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>The stream object holds the image cache, namely:<br /><br />cache_<span style="color:#ff0000">jpeg</span> ...	an array holding the last 4 cached <span style="color:#ff0000">jpegs</span><br />cache_<span style="color:#ff0000">num</span> ...	an integer pointer into the cache_<span style="color:#ff0000">jpeg</span> array<br /></p>
</body></html>

\NewEntry 1 pref_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>Nothing much to say about this except it stores the preference values in the parent, <span style="color:#ff0000">ie</span> <span style="color:#ff0000">dvrview</span>2.<span style="color:#ff0000">php</span> because<br />they will remain there and can be accessed when another frame is loaded.</p>
</body></html>

\NewEntry 1 stats_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>In a word YUK !! ... gets the raw data from 'uname' &amp; 'top' ... does a ton of string splicing &amp; generates a pretty<br />output ... would welcome a re-write of this code.</p>
</body></html>

\NewEntry 1 about_frame.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>Nothing much to say about this :)<br /></p>
</body></html>

\NewEntry 0 'server' code

\NewEntry 1 archive_list.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is server code that returns a coded data blob holding information on the specified video dir data structure. The data blob is coded to drastically reduce the data size and increase responsiveness.<br /><br />called with ...<br /><br />xmlHttpReq.open(&quot;POST&quot;, &quot;archive_list.php?archive_dir=&lt;dir&gt;&quot;);<br /><br />returns ...</p>
<p>#s&lt;filename of first snapshot with this config&gt;$&lt;seconds till next snapshot&gt; ...<br />#s&lt;filename of first snapshot with this config&gt;$&lt;seconds till next snapshot&gt; ...<br />#es&lt;dir name of first dir in seq&gt;$&lt;number of jpegs in dir&gt; ...<br />#ef&lt;dir name of last dir in seq&gt;$&lt;number of jpegs in dir&gt; ...<br />#ec&lt;number of jpegs in 'mid' seq&gt; ...<br /><br /><br /></p>
</body></html>

\NewEntry 1 feed_status.php
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>This is server code that returns a coded data blob holding information on the latest jpeg filenames for all active video feeds plus any feeds identified in the events directory (ie feeds with motion detection active)<br /><br />returns ...</p>
<p>#&lt;filename of latest snapshot for feed 1&gt; ...<br />#&lt;filename of latest snapshot for feed 2&gt; ...<br />#&lt;filename of latest snapshot for feed 3&gt; ...<br />#############<br />$&lt;feed with motion detected, if any&gt; ...<br />$&lt;feed with motion detected, if any&gt; ...<br /><br />a real life example being ...<br /><br />#/motion/20080208/01/video/212836/01.jpg#/motion/20080208/02/video/212836/01.jpg###############$1$2<br /><br /></p>
</body></html>

\NewEntry 0 daemons & the like
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>There are two python house keeping daemons running in the background</p>
</body></html>

\NewEntry 1 kmotion_hkd1.py
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p><span style="color:#ff0000">kmotion</span>_<span style="color:#ff0000">hkd</span>1 checks for low disk space and deletes the oldest archive files if neccessary, it also restarts <span style="color:#ff0000">kmotion</span>_<span style="color:#ff0000">hkd</span>2 &amp; motion if either should stop running.<br /><br />On a SIGHUP it re-reads its config<br /><br />If kmotion_hkd1 detectes an exception while parsing kmotion.rc it kills all daemons</p>
</body></html>


\CurrentEntry 1 kmotion_hkd2,py
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p><span style="color:#ff0000">kmotion</span>_<span style="color:#ff0000">hkd</span>2.<span style="color:#ff0000">py</span> moves snapshots from the <span style="color:#ff0000">tmp</span> directories to the video directories for all feeds dependent on the requested snapshot interval &amp; providing there is not already an event sub directory in the video directory. <br /><br />On a SIGHUP it re-reads its config</p>
</body></html>


\NewEntry 1 daemon_whip.py
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>daemon_whip provides low level kmotion daemon control and status functions <br /><br />If daemon_whip detectes an exception while parsing kmotion.rc it kills all daemons</p>
</body></html>

\NewEntry 1 daemon_manual.py
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p>daemon_manual provides a basic menu front end to control &amp; view the status of kmotions daemons</p>
</body></html>

\NewEntry 1 kmotion_genconfigs.py
<html><head><meta name="qrichtext" content="1" /></head><body style="font-size:9pt;font-family:Sans Serif">
<p><span style="color:#ff0000">kmotion</span>_<span style="color:#ff0000">genconfigs</span> generates motion.<span style="color:#ff0000">conf</span>, motion.?.<span style="color:#ff0000">conf</span> &amp; feed.<span style="color:#ff0000">rc</span> <span style="color:#ff0000">config</span> files from <span style="color:#ff0000">kmotion</span>.<span style="color:#ff0000">rc</span>  From these generated <span style="color:#ff0000">configs</span> motion, the <span style="color:#ff0000">kmotion</span> daemons and the apache PHP code get there configurations so enableing one <span style="color:#ff0000">config</span> file to controll the whole of <span style="color:#ff0000">kmotion</span>. <br /></p>
<p></p>
<p></p>
</body></html>

